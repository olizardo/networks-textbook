{
  "hash": "c96b7ff3e5fdc2a63068ed0c01f52bcf",
  "result": {
    "markdown": "# Centralities based on Shortest Paths {#sec-betcent}\n\n\n\n\n\nRecall that in our discussion of shortest paths between pair of nodes in @sec-indirect, we noted the importance of the **inner nodes** that *intervene* or *mediate* between any one node in the graph that wants to reach another one. Nodes that stand in these **brokerage** or **gatekeeper** slots in the network [@gould_fernandez89], occupy an important position [@marsden83], and this is different from having a lot of contacts (like degree centrality; see @sec-degcent), or being able to reach lots of other nodes by traversing relatively small distances (like closeness centrality; see @sec-closcent). \n\nInstead, the kind of centrality we are talking about is about being *in-between* the indirect communications of other nodes in graph. In this chapter we discuss some centrality metrics designed to capture the extent to which nodes serves as *intermediaries* between other nodes in a social network.\n\n## Stress Centrality\n\nFor instance, let's say you were actor $K$ in the network shown in @fig-bet, and you wanted to know who is the person that you depend on the most to communicate with actor $J$. Here dependence means that you are forced to \"go through them.\" One way $K$ could figure this out is by listing every shortest path having them as the **origin node** and having $J$ as the **destination node**. \n\nAfter you have this list, you can see which of other other nodes shows up as an **inner node**---an intermediary or gatekeeper---in those paths the most times. Remember that two actors can be indirectly linked by *multiple shortest paths of the same length*.\n\n\n\n::: {.cell fig-cap-location='margin'}\n::: {.cell-output-display}\n![An undirected graph showing the node with the maximum betweenness centrality (in red)](lesson-sna-betweenness_files/figure-html/fig-bet-1.png){#fig-bet width=1152}\n:::\n:::\n\n\n\nThis shortest path list between $K$ and $J$ would look like this: \n\n1. $\\{KH, HF, FJ\\}$\n\n1. $\\{KD, DF, FJ\\}$\n\n1. $\\{KH, HN, NJ\\}$\n\n1. $\\{KA, AC, CJ\\}$\n\n1. $\\{KA, AE, EJ\\}$\n\n1. $\\{KH, HE, EJ\\}$\n\nAs the list shows, there are six shortest paths (in this case of length $l = 3$) indirectly connecting actors $K$ and $J$ in @fig-bet, with nodes $\\{A, C, D, E, F, H, N\\}$ showing up as an inner node in at least one of those paths. \n\nTo see which other actor in the network is the most *frequent intermediary* between $K$ and $J$, we can create a list with the number of times each of these nodes shows up as an inner node in the shortest path list shown earlier. We will call each of these numbers $n_{K(x)J}$, where the little $x$ in parentheses in-between the little $K$ and the little $J$ indicates the inner node we are talking about. For instance, $n_{K(A)J}$ refers to the number of times node $A$ stands on a shortest path linking $K$ and $J$, and so forth for each of the nodes in the inner node set $\\{A, C, D, E, F, H, N\\}$.\n\nUsing the the shortest path list mentioned earlier, the table containing this information would look like that shown in @tbl-pairdep. \n\n\n::: {#tbl-pairdep .cell .tbl-cap-location-margin tbl-cap='Intermediaries between nodes J and K'}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-hover table-condensed table-responsive\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:center;\"> Node </th>\n   <th style=\"text-align:center;\"> Freq. </th>\n   <th style=\"text-align:center;\"> Prop. </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:center;\"> A </td>\n   <td style=\"text-align:center;\"> 2 </td>\n   <td style=\"text-align:center;\"> 0.33 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;\"> C </td>\n   <td style=\"text-align:center;\"> 1 </td>\n   <td style=\"text-align:center;\"> 0.17 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;\"> D </td>\n   <td style=\"text-align:center;\"> 1 </td>\n   <td style=\"text-align:center;\"> 0.17 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;\"> E </td>\n   <td style=\"text-align:center;\"> 2 </td>\n   <td style=\"text-align:center;\"> 0.33 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;\"> F </td>\n   <td style=\"text-align:center;\"> 2 </td>\n   <td style=\"text-align:center;\"> 0.33 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;\"> H </td>\n   <td style=\"text-align:center;\"> 3 </td>\n   <td style=\"text-align:center;\"> 0.50 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:center;\"> N </td>\n   <td style=\"text-align:center;\"> 1 </td>\n   <td style=\"text-align:center;\"> 0.17 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\nSo it looks like, looking at the second column of @tbl-pairdep, that $H$ is the other actor that $J$ depends on the most to reach $K$, since they show up three times in the paths linking $K$ and $J$ ($n_{K(H)J} = 3$) beating out all the other nodes.\n\nWe can use this information---aggregated across all pairs of nodes in the graph for every other node---to construct a centrality metric. That is, for each node in the graph $k$ we can ask how often they show up as an intermediary between every other pair of nodes in the graph $i$ and $j$ and then we sum up this quantity across all pairs. This centrality index was first proposed by Alfonso @shimbel53 and it is called the **stress centrality**. \n\nIn equation form you write the stress centrality index like this:\n\n$$\nC^{STRESS}_k = \\sum_{i \\neq k} \\sum_{j \\neq k} n_{i(k)j}\n$$ {#eq-stress}\n\nWhich says that the stress centrality of node $k$ is the sum of the number of times they stand in a shortest path between each pair of nodes in the graph, excluding the pairs that include $k$ as either a starting or ending node in the path connecting them (recall that $i \\neq k$ means \"$i$ does not equal $k$\" in English). \n\n\n::: {#tbl-stress .cell tbl-cap='Stress centrality scores.'}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-hover table-condensed table-responsive\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:center;\"> A </th>\n   <th style=\"text-align:center;\"> B </th>\n   <th style=\"text-align:center;\"> C </th>\n   <th style=\"text-align:center;\"> D </th>\n   <th style=\"text-align:center;\"> E </th>\n   <th style=\"text-align:center;\"> F </th>\n   <th style=\"text-align:center;\"> G </th>\n   <th style=\"text-align:center;\"> H </th>\n   <th style=\"text-align:center;\"> I </th>\n   <th style=\"text-align:center;\"> J </th>\n   <th style=\"text-align:center;\"> K </th>\n   <th style=\"text-align:center;\"> L </th>\n   <th style=\"text-align:center;\"> M </th>\n   <th style=\"text-align:center;\"> N </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:center;\"> 22 </td>\n   <td style=\"text-align:center;\"> 6 </td>\n   <td style=\"text-align:center;\"> 16 </td>\n   <td style=\"text-align:center;\"> 26 </td>\n   <td style=\"text-align:center;\"> 48 </td>\n   <td style=\"text-align:center;\"> 40 </td>\n   <td style=\"text-align:center;\"> 22 </td>\n   <td style=\"text-align:center;\"> 28 </td>\n   <td style=\"text-align:center;\"> 0 </td>\n   <td style=\"text-align:center;\"> 48 </td>\n   <td style=\"text-align:center;\"> 20 </td>\n   <td style=\"text-align:center;\"> 50 </td>\n   <td style=\"text-align:center;\"> 12 </td>\n   <td style=\"text-align:center;\"> 22 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n@tbl-stress shows the results of computing the stress centralities for all the nodes in @fig-bet. It is clear that according to this metric, nodes $E$ and $J$ win out, standing in the middle of a whopping $n_{i(E)j} = n_{i(J)j} = 48$ shortest paths between other nodes in @fig-bet. Node $I$ receives a stress centrality score of $n_{i(I)j} = 0$ because they are not an inner node between any other pair of nodes. \n\n## Betweenness Centrality\n\nWhile Shimbel's Stress Centrality idea goes a long way to capturing the idea of who the most intermediary nodes are, it can be improved upon. This is what was noted by Anthonisse and later Linton Freeman in a landmark series of papers, where they developed a centrality metric aimed to measure node intermediation called **betweenness centrality** [@anthonisse71; @freeman77; @freeman80]\n\nThe basic observation behind betweenness centrality is pretty simple. It rests on the idea that rather than *counting* the raw number of shortest paths a particular node sits on as an inner node, it is better to look at the *percentage* (or proportion) of such paths. \n\nLet us return to our earlier example featuring nodes $K$ and $J$ as the end nodes. To measure the proportion of shortest paths featuring nodes in the inner node set $\\{A, C, D, E, F, H, N\\}$ standing between $K$ and $J$, we simply take $n_{K(x)J}$ and divide it by the *total* number of shortest paths between $K$ and $J$. We will call this quantity $n_{KJ}$, and we already noted from the list we constructed before that was $n_{KJ} = 6$. The new quantity that results from dividing up $n_{K(x)J}$ (for any $x$) by $n_{KJ}$ we will call $p_{K(x)J}$ where the $p$ is a shorthand for the *proportion* of paths between $K$ and $J$ featuring node $x$ as an inner node. \n\nFor instance, let's say we wanted to calculate $p_{K(x)J}$ for node $H$, written $p_{K(H)J}$. We can write this in equation form like this:\n\n$$\n  p_{K(H)J} = \\frac{n_{K(H)J}}{n_{KJ}} = \\frac{3}{6} = 0.5\n$$   {#eq-pairdep}\n\nJust as before, in @eq-pairdep, $n_{K(H)J}$ is the number of shortest paths linking $K$ and $J$ featuring $H$ as an inner node, and $n_{KJ}$ is the *total* number of shortest paths linking $K$ and $J$. In this case, $n_{K(H)J} = 3$ and $n_{KJ} = 6$, which means that actor $K$ depends on actor $H$ for *fifty percent* of their shortest path access to $J$. Making $H$ the actor in the network $K$ depends on the most to be able to reach $J$. The third column of @tbl-pairdep shows the $p_{K(x)J}$ scores for all the nodes in the inner node set $\\{A, C, D, E, F, H, N\\}$ standing between $K$ and $J$. @freeman80 calls the measure in @eq-pairdep the **pair-dependency** of actor $K$ on actor $H$ to reach a given node $J$.\n\nGeneralizing this approach, we can do the same for each triplet of actors $i$, $j$, and $k$ in @fig-bet This is the basis for calculating **betweenness centrality**. That is, we can count the number of times $K$ stands on the shortest path between two other actors $i$ and $j$, we can then divide it by the total number of shortest paths linking actors $i$ and $j$ in the network. As noted, this ratio gives us the *proportion* of shortest paths in the network that have $i$ and $J$ as the end nodes and that feature $K$ as an intermediary inner node, which we can call $p_{i(k)j}$. In equation form:\n\n$$\np_{i(k)j} = \\frac{n_{i(k)j}}{n_{ij}}\n$$ {#eq-pk}\n\n\nFor each node triple in the graph, $p_{i(k)j}$ can range from zero (no shortest paths between $i$ and $j$ feature node $k$ as an intermediary) to one (all the shortest paths between $i$ and $J$ feature node $k$ as an intermediary). @eq-pk can also be interpreted as giving us the *probability* that if we were to select a random shortest path among the ones that link nodes $i$ and $j$, we would find $k$ in the middle of it.\n\nWe can then use the following equation to compute the sum of these proportions for each node $k$ across each pair of actors in the network $i$ and $j$. This gives us the total **betweenness centrality** of any node $k$ in the graph:\n\n$$\n  C_k^{BET} = \\sum_{i \\neq k} \\sum_{j \\neq k} p_{i(k)j}\n$$ {#eq-betcen}\n\nComputing this sum for each node in the graph shown in @fig-bet, yields the betweenness centrality scores shown in @tbl-bet.\n\n\n::: {#tbl-bet .cell tbl-cap='Betweenness centrality scores.'}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-hover table-condensed table-responsive\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:center;\"> A </th>\n   <th style=\"text-align:center;\"> B </th>\n   <th style=\"text-align:center;\"> C </th>\n   <th style=\"text-align:center;\"> D </th>\n   <th style=\"text-align:center;\"> E </th>\n   <th style=\"text-align:center;\"> F </th>\n   <th style=\"text-align:center;\"> G </th>\n   <th style=\"text-align:center;\"> H </th>\n   <th style=\"text-align:center;\"> I </th>\n   <th style=\"text-align:center;\"> J </th>\n   <th style=\"text-align:center;\"> K </th>\n   <th style=\"text-align:center;\"> L </th>\n   <th style=\"text-align:center;\"> M </th>\n   <th style=\"text-align:center;\"> N </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:center;\"> 5 </td>\n   <td style=\"text-align:center;\"> 1.5 </td>\n   <td style=\"text-align:center;\"> 3 </td>\n   <td style=\"text-align:center;\"> 6.8 </td>\n   <td style=\"text-align:center;\"> 11.4 </td>\n   <td style=\"text-align:center;\"> 9.3 </td>\n   <td style=\"text-align:center;\"> 6.3 </td>\n   <td style=\"text-align:center;\"> 4.8 </td>\n   <td style=\"text-align:center;\"> 0 </td>\n   <td style=\"text-align:center;\"> 10.8 </td>\n   <td style=\"text-align:center;\"> 3.7 </td>\n   <td style=\"text-align:center;\"> 16.4 </td>\n   <td style=\"text-align:center;\"> 2.8 </td>\n   <td style=\"text-align:center;\"> 5.3 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\nIn @eq-betcen, the betweenness centrality of a node $k$ goes up by one whole point if they are they can be found as an inner node in *all* the shortest paths indirectly linking $i$ and $j$, otherwise the sum goes up by a quantity (larger than zero but less than one) that is equal to the *proportion* of the paths between $i$ and $j$ that $k$ stands on. \n\nInterestingly, as shown in @fig-bet, the node that ends up with the highest betweenness score is $L$ ($C_L^{BET} = 16.4$), which is different from the result we got using the stress centralities scores in @tbl-stress. This is mostly due to the fact that node $i$, who has the lowest possible betweenness score of zero, depends on this node for access to every other actor in the network. \n\nNote also that two *different* nodes end up being ranked first on closeness---as we saw in @sec-closcent---and betweenness centrality in the same network (compare the red nodes in @fig-clos and @fig-bet). This tells us that closeness and betweenness are analytically distinct measures of node position. One (closeness) gets at reachability, and the other (betweenness) gets at intermediation potential. \n\n## References {.unnumbered}\n",
    "supporting": [
      "lesson-sna-betweenness_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"site_libs/kePrint-0.0.1/kePrint.js\"></script>\r\n<link href=\"site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}