# Types of Ties and Their Graphs {#sec-ties}

```{r setup, include=FALSE}
  knitr::opts_chunk$set(echo = FALSE, message=FALSE, warning=FALSE)
  require(ggraph)
  require(tidygraph)
  require(igraph)
```


## Symmetric Ties and Undirected Graphs 
As noted in @sec-graphtheory, Nodes and edges are indeed the building blocks of a graph. However, types of relationships that the edges represent can change both how we understand the network conceptually and also what mathematical techniques we can apply to the graph when we compute *graph metrics* (the subject of @sec-graphmetrics). The basic idea is that when we do network analysis, we want to map our understanding of the nature of the **social relationships** we are studying to the **types of graphs** we use to represent the network formed by the **concatenation** of those relationships [@martin09]. 

```{r}
#| label: fig-undirected
#| fig-cap: "A undirected graph"
#| fig-cap-location: margin
#| fig-height: 8
#| fig-width: 8

  gr <- create_empty(9, directed = FALSE)
  gr <- gr %>% 
    bind_edges(data.frame(from = 1, to = 2:5)) %>% 
    bind_edges(data.frame(from = 2, to = 3:4)) %>% 
    bind_edges(data.frame(from = 3, to = 4:5)) %>% 
    bind_edges(data.frame(from = 4, to = 5:6)) %>% 
    bind_edges(data.frame(from = 6, to = c(7:9))) %>%
    bind_edges(data.frame(from = 7, to = c(8:9))) %>%
    bind_edges(data.frame(from = 8, to = c(9))) %>%
    mutate(name = toupper(letters[1:9]))
  p <- ggraph(gr, layout = 'kk') 
  p <- p + geom_edge_link(color = "steelblue", width = 1.25) 
  p <- p + geom_node_point(aes(x = x, y = y), size = 18, color = "tan2") 
  p <- p + geom_node_text(aes(label = name), size = 8, color = "white")
  p <- p + theme_graph()
  p
```

Let us assume that @fig-undirected represents a network of people who *spend time together*. One way of building this network would be to ask people on your dorm room floor who are the people that they spend some amount of time (e.g., more than an hour a week) hanging out with. By definition the relation "spending time together" lacks any inherent directionality. **Mutuality** (or **reciprocity**) is built in by construction. It would be nonsensical for a person (say *A*) to claim that they spend time with another person (say *B*) and for *B* to say that they do not spend time with *A*. In social network analysis these types of ties are called **symmetric ties** [@heider46]. So if $AB$ means that *A* spends time with *B* if we know $AB$ is true, then we know that $BA$ is also true. 

In the same way, two people being in the same place at the same time (co-location), even if they do not one another, is an example of a symmetric tie. You also have the symmetric tie "being in the same class as" every other student that is also taking your Social Networks seminar this term. Note that, in this sense, all **co-memberships** create symmetric ties among all actors involved (we will revisit this topic when talking about **affiliation networks** in @sec-affiliation). For instance, if I am a member of your family, you are also my family member; if we are both members of the soccer club, we are considered teammates. 

Social networks composed of symmetric ties are represented using **undirected graphs** like the one shown in @fig-undirected. When an undirected graph has no **loops** (edges connecting a node to itself), and there is only one edge connecting adjacent vertices to one another (the graph has no **multiedges**), it is called a **simple undirected graph**.

Networks composed of symmetric ties have some interesting properties. If we know that the relationship (**R**) linking two nodes *A* and B is **symmetric**, then only a single edge exists that links them, and it does not matter whether we call this edge *AB* or *BA*. The order does not matter. In this way, we can formally define as **symmetric tie** as one that lacks directionality; if a tie is symmetric, then if we know that A is related to B (the AB edge is part of the edge set of the graph), then we know by necessity that B is related to A. 

Can you think of other examples of symmetric ties? Is friendship, as culturally defined in the contemporary world, a symmetric tie?

## Asymmetric Ties and Directed Graphs 
In contrast to spending time together, being members of the same family, or being in the same place at the same time, some social ties allow for inherent **directionality**. Edges in these graphs are are called **asymmetric ties** [@heider46]. That is, one member of the pair can claim to have a particular type of social relationship with the other, but it is possible (although not necessary) that the other person fails to have the same relationship with the first. 

Helping or **social support** relations, are like this. For instance, you can help someone with their homework, or given them personal advice, but this does not *necessarily* mean that that person will return the favor. They may, or they may not. The point is that, in contrast to symmetric tie, **mutuality** or **reciprocity** is not built in by definition, but must happen as an empirical event in the world. We need to ask the other person to find out (or check their email logs). Can you think of other examples of asymmetric social ties?

```{r}
#| label: fig-directed
#| fig-cap: "A directed graph"
#| fig-cap-location: margin
#| fig-height: 8
#| fig-width: 8

  fr <- c("A", "A", "B", "B", "B", "D", "E", "E", "F", "G", "G")
  to <- c("B", "F", "A", "D", "C", "B", "C", "D", "A", "F", "D")
  edge.dat <- data.frame(fr, to)
  node.dat <- data.frame(name = union(fr, to))
  gr <- tbl_graph(edges = edge.dat, nodes = node.dat)
  p <- ggraph(gr, layout = 'kk')
  p <- p + geom_edge_parallel(color = "steelblue", edge_width = 1.25,
              arrow = arrow(length = unit(7, 'mm')),
              end_cap = circle(10, 'mm'), 
              sep = unit(8, 'mm'))
  p <- p + geom_node_point(aes(x = x, y = y), size = 22, color = "tan2") 
  p <- p + geom_node_text(aes(label = name), size = 10, color = "white")
  p <- p + theme_graph() 
  p
```

**Reciprocity** is an important concept in social network analysis. Some have said it is perhaps *the most* important concept for understanding human society [@gouldner60], which may be a bit of an exaggeration. Only asymmetric ties may have the property of being non-reciprocal or having more or less reciprocity. If I think you are my friend, I very much hope that you also think you are my friend. 

That said, sociologists have found that in many natural social settings this is not the case. Sometimes people think they are friends with others, but those other people disagree [@carley_krackhardt96]. For this reason, sociologists typically ask: if I do you a favor, would you do me a favor in the future? Additionally, sociologists often ask: if I treat you with respect, will you also treat me with respect? If I text you, will you text me back? If this is true, we have a level of reciprocity in our relationship. 

For some ties, such advice or support, or friendship relations, reciprocity is all or none; it either exists or it does not. For instance, the friendship offer you extend to someone may be reciprocated (or not). In the same way, you can like someone and they may like you back (or not), like the notes you passed around in middle school. For other ties, such as communication ties (e.g., those defined by the amount of texting, or calling), reciprocity is a matter of degree, there may be more or less. For instance, you can text someone 10 times a day, but they may text you back only half of those instances. In all cases, reciprocity is at a maximum when the content of the relationship is equally exchanged between actors. 

Can you think of relationships in your life characterized by more or less reciprocity?

Just like symmetric ties are represented using a particular type of graph (namely, an **undirected graph**), social networks composed of asymmetric ties are best represented by a type of graph called a **directed graph** (or **digraphs** for short). @fig-directed shows the point and line diagram picture of a digraph. What were simple lines for in the undirected graph shown in @fig-undirected have been replaced with arrows indicating directionality. 

A node **sends** a relationship to the node that the arrow points to, which in turn *receives* the relationship. In a digraph, up to two directed arrows may link nodes going in both directions. When an undirected graph has no **loops** (edges connecting a node to itself), and there is only one edge connecting a sender node to a receiving node (the graph has no **multiedges**) like @fig-directed, it is called a **simple directed graph**. 

In a directed graph, for every edge, there is a **source node** and a **destination node**. So in the case of "A helps B" the source node is *A* and the destination node is *B*. In the case of "B helps A" the source node is *B* and the destination node is *A*. This means that in a directed graph, in contrast to a undirected one, *the order in which you list the nodes when you name the edges matters*. Thus, the edge *AB* is a different one from the edge *BA*. The first one may exist but the second one may not exist (edges in a directed graph are sometimes also called **arcs**). 

For instance, if @fig-directed were an **advice network** [@cross01], on the other hand, we could say that *H* seeks advice from *D*, but *D* does not seek advice from *H*. This may be because *D* is higher in the office hierarchy or is more experienced than *H*, in which case lack of reciprocity may be indicative of an authority relationship between the two nodes.  
One must always be careful when examining a directed network to make sure one properly understands the direction of the underlying social relationships!

### Types of Nodes in Directed Graphs {#sec-typedir}

In a directed graph, there will typically be three types of (non-isolate) nodes [@Harary65]: 

- First, there will be nodes that receive ties but don't send them. These are called **receivers** (like node *C* in @fig-directed). For receiver nodes $k_{in} > 0$ and $k_{out} = 0$.
- Second, there will be nodes that receive ties and also send out ties. These are called **carriers** (like nodes *A* and *B* in @fig-directed. For carrier nodes, $k_{in} > 0$ and $k_{out} > 0$.
- Finally, there will be nodes that send ties but don't receive them. These are called **transmitters** (like nodes *E* and *G* in @fig-directed). For transmitter nodes, $k_{in} = 0$ and $k_{out} > 0$.

## Anti-Symmetric Ties and Tree Graphs

There is a particular type of directed relationship that has the property of only going in one direction. These are called **anti-symmetric ties**. Like asymmetric ties, anti-symmetric ties have a directionality (and thus source and destination nodes), but reciprocity is forbidden by definition. That means that if *A* is anti-symmetrically connected to *B*, then *B* *cannot* send the *same type of tie* back to *A*.

A common example of anti-symmetric ties in political sociology are *patron-client ties* [@martin09]. Patrons can have many clients, but it is impossible for client of a patron to also be a patron to the same person. Other types of anti-symmetric ties include **authority relations** such as hierarchical ties at work, or **cross-generational relations** like kinship ties in families. 

In the first (authority relations) case, your boss is your boss, while you cannot be your boss’ boss. The same goes for armies and other **command and control structures**, *giving orders to* is an anti-symmetric relation. An officer who gives orders to another officer (and thus commands them) *cannot* by definition also receive orders from them. Thus, @fig-tree could be a network in which the anti-symmetric links are directed "gives orders to" (in an army or an office) relations, where the **source node** directs commands toward the **destination node**. So *A* is the top boss and commands *B*, *C*, and *D*. Node *B*, in their turn, gives orders to *E*, who is at the lowest level of the command and control structure, not commanding anybody in turn. 

In the second (cross-generational) case, your parents are your parents (but you can only be a son or daughter to your parents), and your grandparents are their parents, and so forth. "Being the parent of" thus counts as an anti-symmetric relation as we define here; it only goes way (from parents to children) but it cannot come back from children towards parents. Teacher-student, coach-athlete, buyer-seller, parent-child are all examples of anti-symmetric relationships that can be depicted as tree graphs.

Yet another set of relations that can only be represented using anti-symmetric links are **dominance relations**. These include negative interactions like "bullying"---or "pecking" if we are talking about chickens @chase82. Obviously if somebody bullies somebody else then they cannot be bullied back at the same time (although it could happen that a person dominated by a bully can become dominated by the person they used to bully, as when George McFly stood up to Biff in *Back to the Future*, thus reversing the direction of the one-way anti-symmetric link going from $A$ to $B$ so that it goes from $B$ to $A$).^[When dominance relations become concatenated into a whole network based on anti-symmetric dominance links they form a **dominance hierarchy**.] 



```{r}
#| label: fig-tree
#| fig-cap: "A tree graph with thirteen nodes."
#| fig-cap-location: margin
#| fig-width: 10
#| fig-height: 10

  gr <- create_tree(n = 13, children = 3) 
  gr <- mutate(gr, name = toupper(letters[1:13])) 
  p <- ggraph(gr, layout = 'tree')
  p <- p + geom_edge_link(color = "steelblue", edge_width = 1.25,
              arrow = arrow(length = unit(6, 'mm')),
              end_cap = circle(10, 'mm'))
  p <- p + geom_node_point(aes(x = x, y = y), size = 22, color = "tan2") 
  p <- p + geom_node_text(aes(label = name), size = 12, color = "white")
  p <- p + theme_graph() 
  p
```

One feature of a network composed of only anti-symmetric relations is that its corresponding graph can always be drawn from top to bottom, starting (at the top) with the node that only sends but does receive any ties and ending (at the bottom) with nodes that only receive, but do not send, ties. This is called a **tree graph**, like the one shown in @fig-tree. 

For instance, if @fig-tree was a network composed of dominance interactions between people like "bullying" or "beating in a fight," then the tree layout of the oriented graph would reveal the relevant **dominance hierarchy** between people. So we would conclude that node $A$ being a transmitter node as defined in @sec-typedir, that is, a node that is not the receiver of any dominance interactions but only a sender of them, is the "strongest." No one dominates $A$.

Note that if you are dominated by somebody else in a dominance hierarchy, while you may not be able to dominate the person who dominates you back (given the anti-symmetric constraint), you can always dominate *somebody else*. This dynamic creates *chains* of negative interactions, which is exactly how bullying networks work when observed by sociologists.

Thus, in @fig-tree, while $C$ gets dominated by $A$, they in turn bully $H$, $I$, and $H$. This creates dominance chains---technically known as a **directed paths** as we will see in @sec-dirpaths---going from $A$ to $C$ to $H$, $I$, and $J$. Also note that in a dominance hierarchy, transmitter nodes like $\{B, C, D\}$ in @fig-tree are both bullies and bullied, while receiver nodes like $\{E, F, G, H, I, J, K, L, M\}$ are in the worst possible position only receiving negative interactions.

## References {.unnumbered}